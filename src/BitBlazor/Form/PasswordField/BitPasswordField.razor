@namespace BitBlazor.Form

@inherits BitInputFieldBase<string?>

<div class="form-group">
    <label class="@ComputeLabelCssClass()" for="@Id">@Label</label>
    <InputText Value="@Value"
               ValueChanged="ValueChanged"
               ValueExpression="ValueExpression"
               type="@PasswordFieldType"
               class="@ComputeInputCssClass()"
               id="@Id"
               name="@Id"
               disabled="@Disabled"
               readonly="@(Readonly || Plaintext)"
               @attributes="AdditionalAttributes"
               @onchange="@UpdateLabelActiveState"
               @onfocus="@(() => SetLabelActiveState(true))"
               @onblur="@UpdateLabelActiveState"/>
    <button type="button" class="password-icon btn" role="switch" aria-checked="@ButtonAriaChecked" @onclick="TogglePasswordVisibility">
        <span class="visually-hidden">show/hide password</span>
        <BitIcon IconName="@Icons.ItPasswordVisible"
                 Size="IconSize.Small"
                 CssClass="@ComputePasswordVisibleIconClass()"
                 aria-hidden="true" />
        <BitIcon IconName="@Icons.ItPasswordInvisible"
                 Size="IconSize.Small"
                 CssClass="@ComputePasswordInvisibleIconClass()"
                 aria-hidden="true" />
    </button>

    @RenderValidationMessage()

    @RenderAdditionalText()
</div>

@code {
    protected override RenderFragment? RenderAdditionalText() => AdditionalText is null
        ? null
        : @<p id="@AdditionalTextId" class="form-text text-muted d-block small pb-0">@AdditionalText</p>;
}
